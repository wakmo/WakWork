<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- Sets the properties used by the beans by looking up in global.properties -->
    <bean id="propertyConfigurer" class="com.platform7.affinadeploy.GlobalpropsPropertyPlaceholderConfigurer">
        <property name="nameValuePairs">
            <list>
                <!-- Setup of the queues encryption/decryption on ESP Interface -->
				<!-- #AFFINA-ESP -->
                <value>from.affina.to.esp.pci.doDecrypt=true</value>
                <value>from.affina.to.esp.pci.decryptKeyAlias=AES</value>
                <value>from.esp.to.affina.pci.doEncrypt=${MESSAGE_ENCRYPTION_TO_PMA}</value>
                <value>from.esp.to.affina.pci.encryptKeyAlias=${MESSAGE_KEY_ALIAS_TO_PMA}</value>                
                <!-- #SEM-ESP : SEM_TO_AFF means SEM to ESPInteface -->
                <value>from.sem.to.esp.pci.doDecrypt=true</value>
                <value>from.sem.to.esp.pci.decryptKeyAlias=AES</value>
                <value>from.esp.to.sem.pci.doEncrypt=${MESSAGE_ENCRYPTION_FROM_AFF_TO_SEM}</value>
                <value>from.esp.to.sem.pci.encryptKeyAlias=${MESSAGE_KEY_ALIAS_FROM_AFF_TO_SEM}</value>                
                <!-- #CS-ESP : CS_TO_AFF means Customer Service/Thrird Party Issuer to ESPInteface-->
                <value>from.custserv.to.esp.pci.doDecrypt=true</value>
                <value>from.custserv.to.esp.pci.decryptKeyAlias=AES</value>
                <value>from.esp.to.custserv.pci.doEncrypt=${MESSAGE_ENCRYPTION_FROM_AFF_TO_CS}</value>
                <value>from.esp.to.custserv.pci.encryptKeyAlias=${MESSAGE_KEY_ALIAS_FROM_AFF_TO_CS}</value>
                
                <!-- ESPInterface MQ Configuration -->
				<!-- #AFFINA-ESP -->
                <value>from.affina.to.esp.queue.name=${SERVICE_ESPINTERFACE_QUEUE_WORKFLOW_FROM_PMA}</value>
                <value>from.esp.to.affina.queue.name=${SERVICE_ESPINTERFACE_QUEUE_WORKFLOW_TO_PMA}</value>				
				<!-- #SEM-ESP : SEM_TO_AFF means SEM to ESPInteface -->
                <value>from.sem.to.esp.queue.name=${SERVICE_ESPINTERFACE_QUEUE_FROM_SEM_TO_AFF}</value>
                <value>from.esp.to.sem.queue.name=${SERVICE_ESPINTERFACE_QUEUE_FROM_AFF_TO_SEM}</value>				
				<!-- #CS-ESP : CS_TO_AFF means Customer Service/Thrird Party Issuer to ESPInteface-->
                <value>from.custserv.to.esp.queue.name=${SERVICE_ESPINTERFACE_QUEUE_FROM_CS_TO_AFF}</value>
                <value>from.esp.to.custserv.queue.name=${SERVICE_ESPINTERFACE_QUEUE_FROM_AFF_TO_CS}</value>
								
				<!-- Container specific properties -->
                <value>esp.encryption.encoding=${ENCODING}</value>
				<value>esp.xml.encoding=${ENCODING}</value>
				<value>esp.message.encoding=${ENCODING}</value>

                <!-- Common properties - might not all be needed here -->
                <value>jms.hostName=${MQ_HOSTNAME}</value>
                <value>jms.queueManager=${MQ_QUEUE_MANAGER}</value>
                <value>jms.transportType=${MQ_TRANSPORT_TYPE}</value>
                <value>jms.port=${MQ_JMS_PORT}</value>
                <value>jms.channel=${MQ_CHANNEL}</value>
                <value>destName.progress=${PROGRESS_TOPIC}</value>
                <value>destName.alarms=${ALARM_TOPIC}</value>
				
				<!-- jms concurrent consumers -->
				<value>affinaEsp.concurrent.consumers=15</value> 
				<value>affinaEsp.max.concurrent.consumers=15</value>
				<value>semEsp.concurrent.consumers=15</value> 
				<value>semEsp.max.concurrent.consumers=15</value>
				<value>custServEsp.concurrent.consumers=5</value> 
				<value>custServEsp.max.concurrent.consumers=5</value>
				
                <value>mq.cacheSize=20</value>
                <value>topic.cacheSize=20</value>
				
				<!-- #Outbound queue parameter configuration -->
				<value>from.esp.to.affina.queue.receive.timeout=20000</value>
				<value>from.esp.to.sem.queue.receive.timeout=20000</value>
				<value>from.esp.to.custserv.queue.receive.timeout=20000</value>

                <!-- Common properties - might not all be needed here -->
                <value>database.pma.user=${PMAUSERNAME}</value>
                <value>database.pma.password=${PMAPASSWD}</value>

                <!-- Container specific properties -->
                <value>database.showSQL=false</value>
				
				<!-- enable ESPInterface to accept alert Messages from Affina -->
                <value>esp.enable.cardsetup.alert.from.affina=${ENABLE_CARD_SETUP_ALERT_MESSAGE}</value>
				<value>esp.enable.stagescript.alert.from.affina=false</value>
				
				 <!-- enable ESPInterface to accept request Messages from Sem -->
				<value>esp.enable.scriptupdate.request.from.sem=true</value>

				<value>esp.application.module.name=espInterface</value>
				<value>esp.application.service.name=${SERVICE_NAME}</value>
				<value>esp.application.service.suffix=${APPSERVER_SUFFIX}</value>                         
				<value>esp.application.scope=${ESP_SCOPE}</value> 
				
				<value>show.progress.message.cardsetuprequest=false</value>
				<value>show.progress.message.scriptstatusresponse=false</value>
				<value>show.progress.message.stagescriptrequest=false</value>
				<value>show.progress.message.cardsetupresponse=false</value>
				<value>show.progress.message.stagescriptresponse=false</value>
				<value>show.progress.message.configimportalert=false</value>
								
                <value>show.warning.message.scriptstatusresponse=true</value>
                                
				<value>show.validation.error.cardsetupresponse=true</value>
				<value>show.validation.error.scriptstatusresponse=false</value>
				<value>show.validation.error.stagescriptresponse=false</value>
				<value>show.validation.error.configimportalert=false</value>
				
				<!--Workflow specific properties -->
				<!-- <value>esp.workflow.cron.expression=1 * * * * ?</value> -->
				<!-- This is to suspend workflow by setting it to execute evey mid night on xmass day if it is sunday-->
				<value>esp.workflow.cron.expression=0 0 0 25 12 1</value>
				
				<!--Workbacth specific properties -->
				<value>esp.chunck.size.stagescript=1000</value>
				<value>esp.chunck.commit.interval.stagescript=1</value>

            </list>
        </property>
    </bean>

</beans>
        